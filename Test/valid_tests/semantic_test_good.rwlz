// Valid semantic test for RWLZ
// Tests: variable declarations, type checking, control flow

int factorial(int n) {
    if (n <= 1) {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}

float calculateAverage(array int numbers, int count) {
    int sum = 0;
    
    for (int i = 0; i < count; ++i) {
        sum += numbers[i];
    }
    
    float average = sum;
    return average;
}

int main() {
    // Variable declarations with proper types
    int x = 10;
    float y = 3.14;
    bool flag = true;
    const int MAX = 100;
    
    // Array declarations
    array int scores = [10, 20, 30, 40, 50];
    
    // Arithmetic operations with type compatibility
    int result = x + 5;
    float fresult = y * 2.0;
    
    // Comparison operations
    if (x > 5 && flag) {
        result = result * 2;
    }
    
    // Loop with proper scope
    for (int i = 0; i < 5; ++i) {
        scores[i] = scores[i] + 1;
    }
    
    // Function calls with proper arguments
    int fact = factorial(5);
    float avg = calculateAverage(scores, 5);
    
    // Compound assignments
    x += 10;
    y *= 1.5;
    
    return 0;
}
